{"events":[{"defined_class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest","event":"call","id":176847,"lineno":172,"method_id":"doFilter_bearerPrefixWithoutToken_ignored_noProviderCalls","path":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java","receiver":{"class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest","object_id":1605581063,"value":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest@5fb33907"},"static":false,"thread_id":1},{"defined_class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilter","event":"call","id":176848,"lineno":28,"method_id":"doFilterInternal","parameters":[{"class":"org.springframework.mock.web.MockHttpServletRequest","kind":"req","name":"request","object_id":1419544665,"value":"org.springframework.mock.web.MockHttpServletRequest@549c8859"},{"class":"org.springframework.mock.web.MockHttpServletResponse","kind":"req","name":"response","object_id":2096818628,"value":"org.springframework.mock.web.MockHttpServletResponse@7cfae9c4"},{"class":"org.springframework.mock.web.MockFilterChain","kind":"req","name":"chain","object_id":326721695,"value":"org.springframework.mock.web.MockFilterChain@1379609f"}],"path":"src/main/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilter.java","receiver":{"class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilter","object_id":1438910710,"value":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilter@55c408f6"},"static":false,"thread_id":1},{"elapsed":0.0,"event":"return","id":176849,"parent_id":176848,"thread_id":1},{"elapsed":6.5122E-4,"event":"return","id":176850,"parent_id":176847,"thread_id":1}],"classMap":[{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[{"labels":[],"location":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java:172","name":"doFilter_bearerPrefixWithoutToken_ignored_noProviderCalls","static":false,"type":"function"}],"location":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java","name":"JwtAuthenticationFilterTest","static":false,"type":"class"},{"children":[{"labels":[],"location":"src/main/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilter.java:28","name":"doFilterInternal","static":false,"type":"function"}],"location":"src/main/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilter.java","name":"JwtAuthenticationFilter","static":false,"type":"class"}],"name":"jwt","type":"package"}],"name":"security","type":"package"}],"name":"accesscontrol","type":"package"}],"name":"example","type":"package"}],"name":"com","type":"package"}],"version":"1.2","metadata":{"name":"Jwt authentication filter do filter _ bearer prefix without token _ ignored _ no provider calls","app":"accesscontrol","language":{"name":"java","version":"17.0.15+6-LTS","engine":"OpenJDK 64-Bit Server VM"},"client":{"name":"appmap-java","url":"https://github.com/appland/appmap-java"},"recorder":{"name":"junit","type":"tests"},"recording":{"defined_class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest","method_id":"doFilter_bearerPrefixWithoutToken_ignored_noProviderCalls"},"git":{"repository":"https://github.com/AlhaderMajd/accessControl-majd.git","branch":"main","commit":"f969f73139297df67ef2edc2eb60357323900968"},"source_location":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java:172","frameworks":[{"name":"JUnit","version":"5"}],"test_status":"succeeded"},"eventUpdates":{}}