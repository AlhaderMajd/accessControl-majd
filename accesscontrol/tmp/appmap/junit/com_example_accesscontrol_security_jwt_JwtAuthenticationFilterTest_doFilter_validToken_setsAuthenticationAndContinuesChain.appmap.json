{"events":[{"defined_class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest","event":"call","id":181121,"lineno":46,"method_id":"doFilter_validToken_setsAuthenticationAndContinuesChain","path":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java","receiver":{"class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest","object_id":467526945,"value":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest@1bdde521"},"static":false,"thread_id":1},{"defined_class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilter","event":"call","id":181138,"lineno":28,"method_id":"doFilterInternal","parameters":[{"class":"org.springframework.mock.web.MockHttpServletRequest","kind":"req","name":"request","object_id":1006435246,"value":"org.springframework.mock.web.MockHttpServletRequest@3bfcfbae"},{"class":"org.springframework.mock.web.MockHttpServletResponse","kind":"req","name":"response","object_id":1569169663,"value":"org.springframework.mock.web.MockHttpServletResponse@5d87a0ff"},{"class":"org.springframework.mock.web.MockFilterChain","kind":"req","name":"chain","object_id":2013752188,"value":"org.springframework.mock.web.MockFilterChain@78076b7c"}],"path":"src/main/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilter.java","receiver":{"class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilter","object_id":3304184,"value":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilter@326af8"},"static":false,"thread_id":1},{"elapsed":2.9954E-4,"event":"return","id":181155,"parent_id":181138,"thread_id":1},{"elapsed":0.00131956,"event":"return","id":181172,"parent_id":181121,"thread_id":1}],"classMap":[{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[{"labels":[],"location":"src/main/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilter.java:28","name":"doFilterInternal","static":false,"type":"function"}],"location":"src/main/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilter.java","name":"JwtAuthenticationFilter","static":false,"type":"class"},{"children":[{"labels":[],"location":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java:46","name":"doFilter_validToken_setsAuthenticationAndContinuesChain","static":false,"type":"function"}],"location":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java","name":"JwtAuthenticationFilterTest","static":false,"type":"class"}],"name":"jwt","type":"package"}],"name":"security","type":"package"}],"name":"accesscontrol","type":"package"}],"name":"example","type":"package"}],"name":"com","type":"package"}],"version":"1.2","metadata":{"name":"Jwt authentication filter do filter _ valid token _ sets authentication and continues chain","app":"accesscontrol","language":{"name":"java","version":"17.0.15+6-LTS","engine":"OpenJDK 64-Bit Server VM"},"client":{"name":"appmap-java","url":"https://github.com/appland/appmap-java"},"recorder":{"name":"junit","type":"tests"},"recording":{"defined_class":"com.example.accesscontrol.security.jwt.JwtAuthenticationFilterTest","method_id":"doFilter_validToken_setsAuthenticationAndContinuesChain"},"git":{"repository":"https://github.com/AlhaderMajd/accessControl-majd.git","branch":"main","commit":"52348b38882c95243444f8525b39b8cad6e50a0a"},"source_location":"src/test/java/com/example/accesscontrol/security/jwt/JwtAuthenticationFilterTest.java:46","frameworks":[{"name":"JUnit","version":"5"}],"test_status":"succeeded"},"eventUpdates":{}}